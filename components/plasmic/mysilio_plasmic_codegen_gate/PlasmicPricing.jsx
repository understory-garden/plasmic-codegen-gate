// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gErtg5ViHSLXLeffwUSREY
// Component: 0yGqkLfVE0_9
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: fTG1BE0IJB9/component
import Section from "../../Section"; // plasmic-import: aetSz6183gd/component
import Plan from "../../Plan"; // plasmic-import: AvW_-cSxddlV/component
import Bullet from "../../Bullet"; // plasmic-import: ZGbDSgngjKOB/component
import LinkButton from "../../LinkButton"; // plasmic-import: fM5CswKgCJBh/component
import Faq from "../../Faq"; // plasmic-import: cN31TQ2GydrE/component
import Footer from "../../Footer"; // plasmic-import: XLMICiDxiJT/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kVQm-xdFvWm6/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_mysilio_plasmic_codegen_gate.module.css"; // plasmic-import: gErtg5ViHSLXLeffwUSREY/projectcss
import * as sty from "./PlasmicPricing.module.css"; // plasmic-import: 0yGqkLfVE0_9/css

export const PlasmicPricing__VariantProps = new Array();

export const PlasmicPricing__ArgProps = new Array();

function PlasmicPricing__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__wes1S)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <Section
              className={classNames("__wab_instance", sty.section__xs9Fd)}
              subtitle={
                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
              }
              title={"Pricing"}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___09CVe)}
            >
              <Plan
                className={classNames("__wab_instance", sty.plan__drvlu)}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__fkC8
                    )}
                  >
                    {"$10"}
                  </div>
                }
              >
                <LinkButton text={"Get started"} type={"outlineBlue"} />
              </Plan>

              <Plan
                className={classNames("__wab_instance", sty.plan__e9Zpe)}
                description={
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__gttcd)}
                  >
                    <Bullet
                      className={classNames(
                        "__wab_instance",
                        sty.bullet__cfBad
                      )}
                    />

                    <Bullet
                      className={classNames(
                        "__wab_instance",
                        sty.bullet__b71W0
                      )}
                    />

                    <Bullet
                      className={classNames(
                        "__wab_instance",
                        sty.bullet__vsaZ1
                      )}
                    />

                    <Bullet
                      className={classNames(
                        "__wab_instance",
                        sty.bullet__haraO
                      )}
                    />
                  </p.Stack>
                }
                name={"Team"}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__pcsAe
                    )}
                  >
                    {"$49"}
                  </div>
                }
              >
                <LinkButton text={"Get started"} type={"solidBlue"} />
              </Plan>

              <Plan
                className={classNames("__wab_instance", sty.plan___7DzUi)}
                name={"Enterprise"}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__hXapq
                    )}
                  >
                    {"$199"}
                  </div>
                }
              >
                <LinkButton text={"Contact us"} type={"outlineBlue"} />
              </Plan>
            </p.Stack>

            <Section
              className={classNames("__wab_instance", sty.section__ok4Gp)}
              subtitle={
                <React.Fragment>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___0HScE
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  </div>

                  <Faq
                    className={classNames("__wab_instance", sty.faq__dBfdy)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Are there long-term contracts?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq__r6OMq)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Can I add or remove licenses?"}
                  </Faq>

                  <Faq
                    className={classNames("__wab_instance", sty.faq__bP8Za)}
                    slot={
                      "Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
                    }
                  >
                    {"Do you offer refunds?"}
                  </Faq>
                </React.Fragment>
              }
              title={"FAQ"}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "footer"],
  header: ["header"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPricing__ArgProps,
      internalVariantPropNames: PlasmicPricing__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
